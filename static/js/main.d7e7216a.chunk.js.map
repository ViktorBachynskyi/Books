{"version":3,"sources":["api/books.ts","components/AddBook/AddBook.tsx","components/BooksListTable/BooksListTable.tsx","components/EditBook/EditBook.tsx","App.tsx","index.tsx"],"names":["API_URL","getBook","a","fetch","response","json","addBook","newBook","method","body","JSON","stringify","headers","deleteBook","id","AddBook","props","useState","title","author","category","ISBN","setNewBook","inputHander","event","Math","random","target","name","value","addNewBook","preventDefault","setBooks","books","className","onSubmit","type","onClick","showAddForm","required","onChange","autoComplete","minLength","maxLength","BooksListTable","removeBook","filter","book","map","toggleSelectedBook","initialState","EditBook","selectedBook","editingBook","setEditingBook","useEffect","find","splice","findIndex","App","showAddBook","setShowAddBook","setSelectedBook","booksFromServer","fetchBook","classnames","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7e7216a.chunk.js","sourcesContent":["const API_URL = 'https://my-json-server.typicode.com/ViktorBachynskyi/json-server/books';\n\nexport async function getBook(): Promise<Book[]> {\n  const response = await fetch(API_URL);\n\n  return response.json();\n}\n\nexport async function addBook(newBook: Book | null): Promise<Book[]> {\n  const response = await fetch(API_URL, {\n    method: 'POST',\n    body: JSON.stringify(newBook),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  });\n\n  return response.json();\n}\n\nexport async function deleteBook(id: number) {\n  const response = await fetch(`${API_URL}/${id}`, {\n    method: 'DELETE',\n  });\n\n  return response.json();\n}\n","import React, { useState } from 'react';\nimport { addBook } from '../../api/books';\nimport './AddBook.scss';\n\ntype Props = {\n  books: Book[],\n  setBooks: (book: Book[]) => void,\n  showAddForm: () => void,\n};\n\nexport const AddBook: React.FC<Props> = (props) => {\n  const [newBook, setNewBook] = useState({\n    id: 0,\n    title: '',\n    author: '',\n    category: '',\n    ISBN: '',\n  });\n\n  const inputHander = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewBook({\n      ...newBook,\n      id: Math.random(),\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const clearInput = () => {\n    setNewBook({\n      id: 0,\n      title: '',\n      author: '',\n      category: '',\n      ISBN: '',\n    });\n  };\n\n  const addNewBook = async (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    await addBook(newBook);\n\n    props.setBooks([...props.books, newBook]);\n    clearInput();\n  };\n\n  return (\n    <form className=\"addBook-form\" onSubmit={addNewBook}>\n      <fieldset className=\"addBook-form__container\">\n        <button\n          type=\"button\"\n          className=\"addBook-form__button-close\"\n          onClick={() => props.showAddForm()}\n        >\n          X\n        </button>\n        <legend>Add book</legend>\n        Book title\n        <input\n          name=\"title\"\n          value={newBook.title}\n          type=\"text\"\n          required\n          onChange={inputHander}\n        />\n        Author name\n        <input\n          name=\"author\"\n          value={newBook.author}\n          type=\"text\"\n          required\n          onChange={inputHander}\n        />\n        Category\n        <input\n          name=\"category\"\n          value={newBook.category}\n          type=\"text\"\n          required\n          onChange={inputHander}\n        />\n        International Standard Book Number (ISBN)\n        <input\n          name=\"ISBN\"\n          value={newBook.ISBN}\n          type=\"text\"\n          required\n          autoComplete=\"off\"\n          minLength={6}\n          maxLength={6}\n          onChange={inputHander}\n        />\n        <button\n          type=\"submit\"\n          className=\"addBook-form__button\"\n        >\n          Add book\n        </button>\n      </fieldset>\n    </form>\n  );\n};\n","import React from 'react';\nimport { deleteBook } from '../../api/books';\nimport './BooksListTable.scss';\n\ntype Props = {\n  books: Book[];\n  setBooks: (book: Book[]) => void,\n  toggleSelectedBook: (book?: Book) => void,\n};\n\nexport const BooksListTable: React.FC<Props> = (props) => {\n  const removeBook = async (event: React.MouseEvent<HTMLButtonElement>, id: number) => {\n    await deleteBook(id);\n\n    props.setBooks(props.books.filter((book: Book) => book.id !== id));\n  };\n\n  return (\n    <div className=\"books\">\n      <table className=\"books__table\">\n        <tbody>\n          <tr>\n            <td>Book title</td>\n            <td>Author name</td>\n            <td>Category</td>\n            <td>ISBN</td>\n            <td>Actions</td>\n          </tr>\n        </tbody>\n        {props.books.map(book => (\n          <tbody key={book.id}>\n            <tr>\n              <td>{book.title}</td>\n              <td>{book.author}</td>\n              <td>{book.category}</td>\n              <td>{book.ISBN}</td>\n              <td className=\"books__field-actions\">\n                <button\n                  type=\"button\"\n                  onClick={() => props.toggleSelectedBook(book)}\n                >\n                  Edit\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={(event) => removeBook(event, book.id)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        ))}\n      </table>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './EditBook.scss';\n\ntype Props = {\n  books: Book[],\n  setBooks: (book: Book[]) => void,\n  selectedBook: Book | null,\n  toggleSelectedBook: (book?: Book) => void,\n};\n\nconst initialState: Book = {\n  id: 0,\n  title: '',\n  author: '',\n  category: '',\n  ISBN: '',\n};\n\nexport const EditBook: React.FC<Props> = ({\n  books,\n  setBooks,\n  selectedBook,\n  toggleSelectedBook,\n}) => {\n  const [editingBook, setEditingBook] = useState(selectedBook || initialState);\n\n  useEffect(() => {\n    if (selectedBook) {\n      setEditingBook(selectedBook);\n    }\n  }, [selectedBook]);\n\n  const inputHander = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEditingBook({\n      ...editingBook,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const clearInput = () => {\n    setEditingBook({\n      id: 0,\n      title: '',\n      author: '',\n      category: '',\n      ISBN: '',\n    });\n  };\n\n  const editBook = () => {\n    const index = books.find((book: Book) => book.id === editingBook.id);\n\n    if (index) {\n      books.splice(books\n        .findIndex((book: Book) => book.id === editingBook.id), 1, editingBook);\n\n      setBooks(\n        [...books],\n      );\n    } else {\n      clearInput();\n    }\n  };\n\n  return (\n    <form className=\"addBook-form\">\n      <fieldset className=\"addBook-form__container\">\n        <button\n          type=\"button\"\n          className=\"addBook-form__button-close\"\n          onClick={() => toggleSelectedBook()}\n        >\n          X\n        </button>\n        <legend>Edit book</legend>\n        Book title\n        <input\n          name=\"title\"\n          value={editingBook.title}\n          type=\"text\"\n          required\n          onChange={inputHander}\n        />\n        Author name\n        <input\n          name=\"author\"\n          value={editingBook.author}\n          type=\"text\"\n          required\n          onChange={inputHander}\n        />\n        Category\n        <input\n          name=\"category\"\n          value={editingBook.category}\n          type=\"text\"\n          required\n          onChange={inputHander}\n        />\n        International Standard Book Number (ISBN)\n        <input\n          name=\"ISBN\"\n          value={editingBook.ISBN}\n          type=\"text\"\n          required\n          autoComplete=\"off\"\n          minLength={6}\n          maxLength={6}\n          onChange={inputHander}\n        />\n        <button\n          type=\"button\"\n          className=\"addBook-form__button\"\n          onClick={editBook}\n        >\n          Edit book\n        </button>\n      </fieldset>\n    </form>\n  );\n};\n","/* eslint-disable linebreak-style */\r\nimport React, { useEffect, useState } from 'react';\r\nimport classnames from 'classnames';\r\nimport { getBook } from './api/books';\r\nimport './App.scss';\r\nimport { AddBook } from './components/AddBook/AddBook';\r\nimport { BooksListTable } from './components/BooksListTable/BooksListTable';\r\nimport { EditBook } from './components/EditBook/EditBook';\r\n\r\nexport const App: React.FC = () => {\r\n  const [books, setBooks] = useState<Book[]>([]);\r\n  const [showAddBook, setShowAddBook] = useState(false);\r\n  const [selectedBook, setSelectedBook] = useState<Book | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchBook = async () => {\r\n      const booksFromServer = await getBook();\r\n\r\n      setBooks(booksFromServer);\r\n    };\r\n\r\n    fetchBook();\r\n  }, []);\r\n\r\n  const showAddForm = () => {\r\n    setShowAddBook(!showAddBook);\r\n  };\r\n\r\n  const toggleSelectedBook = (book?: Book) => {\r\n    if (book) {\r\n      setSelectedBook(book);\r\n    } else {\r\n      setSelectedBook(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className={classnames({\r\n        'side-addForm': true,\r\n        'side-addForm--opened': showAddBook,\r\n      })}\r\n      >\r\n        <AddBook\r\n          books={books}\r\n          setBooks={setBooks}\r\n          showAddForm={showAddForm}\r\n        />\r\n      </div>\r\n      <div className=\"page-content\">\r\n        <BooksListTable\r\n          books={books}\r\n          setBooks={setBooks}\r\n          toggleSelectedBook={toggleSelectedBook}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          onClick={showAddForm}\r\n        >\r\n          Add book\r\n        </button>\r\n      </div>\r\n      <div className={classnames({\r\n        'side-editForm': true,\r\n        'side-editForm--opened': selectedBook,\r\n      })}\r\n      >\r\n        <EditBook\r\n          books={books}\r\n          setBooks={setBooks}\r\n          selectedBook={selectedBook}\r\n          toggleSelectedBook={toggleSelectedBook}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}